// <auto-generated />
using System;
using Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240411140301_FourthFixingAddingCoursesAttributes")]
    partial class FourthFixingAddingCoursesAttributes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Infrastructure.Entities.CourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraInfoOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraInfoThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraInfoTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageALtText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBestseller")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDigital")
                        .HasColumnType("bit");

                    b.Property<string>("LikesInNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LikesInProcent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfArticles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfStars")
                        .HasColumnType("int");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("Resourses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WhatYouLearn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WhatYouLearnId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Infrastructure.Entities.FeatureEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ingress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("Infrastructure.Entities.FeatureItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("FeatureItems");
                });

            modelBuilder.Entity("Infrastructure.Entities.IntegrateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ingress")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Integrate");
                });

            modelBuilder.Entity("Infrastructure.Entities.IntegrateItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Headline")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IntegrateId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IntegrateId");

                    b.ToTable("IntegrateItem");
                });

            modelBuilder.Entity("Infrastructure.Entities.ManageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manage");
                });

            modelBuilder.Entity("Infrastructure.Entities.ManageItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Facts")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("ManageItems");
                });

            modelBuilder.Entity("Infrastructure.Entities.ProgramDetailsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseEntityId");

                    b.ToTable("ProgramDetails");
                });

            modelBuilder.Entity("Infrastructure.Entities.ProgramDetailsItemsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramDetailsEntityId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramDetailsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramDetailsEntityId");

                    b.ToTable("ProgramDetailsItems");
                });

            modelBuilder.Entity("Infrastructure.Entities.SubscriberEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdvertisingUpdates")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EventUpdates")
                        .HasColumnType("bit");

                    b.Property<bool>("Newsletter")
                        .HasColumnType("bit");

                    b.Property<bool>("Podcasts")
                        .HasColumnType("bit");

                    b.Property<bool>("StartUps")
                        .HasColumnType("bit");

                    b.Property<bool>("WeekInReview")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("Infrastructure.Entities.TeacherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaceBookFollowers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YoutubeSubscribers")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Infrastructure.Entities.WhatYouLearnEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseEntityId");

                    b.ToTable("WhatYouLearn");
                });

            modelBuilder.Entity("Infrastructure.Entities.WhatYouLearnItemsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("WhatYouLearnId")
                        .HasColumnType("int");

                    b.Property<string>("WhatyoulearnFact")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WhatYouLearnId");

                    b.ToTable("WhatYouLearnItems");
                });

            modelBuilder.Entity("Infrastructure.Entities.CourseEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.CategoryEntity", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Infrastructure.Entities.TeacherEntity", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Category");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Infrastructure.Entities.FeatureItemEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.FeatureEntity", "Feature")
                        .WithMany("FeatureItems")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("Infrastructure.Entities.IntegrateItemEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.IntegrateEntity", "Integrate")
                        .WithMany("IntegrateItems")
                        .HasForeignKey("IntegrateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Integrate");
                });

            modelBuilder.Entity("Infrastructure.Entities.ManageItemEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.ManageEntity", "Manager")
                        .WithMany("Tags")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Infrastructure.Entities.ProgramDetailsEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.CourseEntity", null)
                        .WithMany("ProgramDetailsItems")
                        .HasForeignKey("CourseEntityId");
                });

            modelBuilder.Entity("Infrastructure.Entities.ProgramDetailsItemsEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.ProgramDetailsEntity", "ProgramDetailsEntity")
                        .WithMany("ProgramDetails")
                        .HasForeignKey("ProgramDetailsEntityId");

                    b.Navigation("ProgramDetailsEntity");
                });

            modelBuilder.Entity("Infrastructure.Entities.WhatYouLearnEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.CourseEntity", null)
                        .WithMany("WhatYouLearnItems")
                        .HasForeignKey("CourseEntityId");
                });

            modelBuilder.Entity("Infrastructure.Entities.WhatYouLearnItemsEntity", b =>
                {
                    b.HasOne("Infrastructure.Entities.WhatYouLearnEntity", "WhatYouLearnEntity")
                        .WithMany("whatYouLearnItems")
                        .HasForeignKey("WhatYouLearnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WhatYouLearnEntity");
                });

            modelBuilder.Entity("Infrastructure.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Infrastructure.Entities.CourseEntity", b =>
                {
                    b.Navigation("ProgramDetailsItems");

                    b.Navigation("WhatYouLearnItems");
                });

            modelBuilder.Entity("Infrastructure.Entities.FeatureEntity", b =>
                {
                    b.Navigation("FeatureItems");
                });

            modelBuilder.Entity("Infrastructure.Entities.IntegrateEntity", b =>
                {
                    b.Navigation("IntegrateItems");
                });

            modelBuilder.Entity("Infrastructure.Entities.ManageEntity", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Infrastructure.Entities.ProgramDetailsEntity", b =>
                {
                    b.Navigation("ProgramDetails");
                });

            modelBuilder.Entity("Infrastructure.Entities.TeacherEntity", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Infrastructure.Entities.WhatYouLearnEntity", b =>
                {
                    b.Navigation("whatYouLearnItems");
                });
#pragma warning restore 612, 618
        }
    }
}
